ALGORITHM sentence_log
var 
  
  character : CHAR;
  sentence : STRING := '';
  NB_CHARCTER : INTEGER=0
  NB_vowels:INTEGER=0
  NB_words : INTEGER:=0;
 
  
 
BEGIN  
  REPEAT

Read( character )
      sentence= sentence  + character;
carac:=carac+1;
    UNTIL (  character = '.' )
FOR i FROM 0 TO NB OF CHARCTER -1 DO   
THEN  (sentence[i] = ' ') OR (sentence[i] = '.')
            Read  NB_Word++;

 SWITCH ( sentence[i] 
iflowercase or upper case   ) DO
            case 'a' : NB_Vowels++; BREAK;
            case 'e' : NB_Vowels++; BREAK;
            case 'i' : NB_Vowels++; BREAK;
            case 'o' : NB_Vowels++; BREAK;
            case 'u' : NB_Vowels++; BREAK;
            case 'y' : NB_Vowels++; BREAK;
            case 'A' : NB_Vowels++; BREAK;
            case 'E' : NB_Vowels++; BREAK;
            case 'I' : NB_Vowels++; BREAK;
            case 'O' : NB_Vowels++; BREAK;
            case 'U' : NB_Vowels++; BREAK;
            case 'Y' : NB_Vowels++; BREAK;
        END_SWITCH
END_FOR 
   
    write ('sentence contain ',nb_words,'word,',nb_voyels,'voyelle and'nb_sentence,'.')










